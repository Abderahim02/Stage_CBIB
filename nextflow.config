params {
    // Modes: run_standard, run_dataset, generate_and_run
    mode = "run_dataset"
    standard = "none" // This needs to be specified if mode is run_standard
    sc_type = "seurat"
    sp_type = "synthvisium"
    annot = "subclass"
    sampleID = "none"
    deconv_args = []
    methods = "music,rctd,spotlight,stereoscope,cell2location"
    cuda_device = "cpu"
    epoch_build = 10
    epoch_fit = 10
}


manifest {
    author = 'Chananchida Sang-aram'
    description = 'Pipeline for benchmarking spatial deconvolution and mapping tools'
    mainScript = 'main.nf'
    version = '0.1'
    defaultBranch = 'main'
}

profiles {
    local {
        process.executor = 'local'
        workDir = '/mnt/d/spade-benchmark/scripts/work'
        params {
            params.rootdir = '/mnt/d/spade-benchmark'
            outdir = [props: "${params.rootdir}/deconv_proportions",
                      metrics: "${params.rootdir}/results",
                      synvis: "${params.rootdir}/synthetic_data/"]
            sc_input = "${params.rootdir}/unit-test/test_sc_data.rds"
            sp_input = "${params.rootdir}/unit-test/test_sp_data.rds"
        }


    }

    docker {
        docker.enabled = true
        docker.runOptions = "--mount type=bind,source=${params.rootdir},target=${params.rootdir}"
    }

    prism {
        process {
            executor = "sge"

            withLabel: retry {
                errorStrategy = 'retry'
                maxRetries = 3
            }
            
            // Increase number of cores based on retries
            clusterOptions = { "-S /bin/bash -pe serial ${task.attempt * 4} -l h_vmem=8G -N ${task.tag}" }
        }

        singularity {
            enabled = true
            cacheDir = "/group/irc/shared/spade_benchmark/singularity"
        }

        workDir = "$HOME/spade-benchmark/scripts/work"
        

        // Script parameters
        params {
            rootdir = "$HOME/spade-benchmark"
            outdir = [props: "${params.rootdir}/deconv_proportions",
                      metrics: "${params.rootdir}/results",
                      synvis: "${params.rootdir}/synthetic_data/"]
            sc_input = "${params.rootdir}/unit-test/test_sc_data.rds"
            sp_input = "${params.rootdir}/unit-test/test_sp_data.rds"
            epoch_build = "default"
            epoch_fit = "default"
        }

        // Trace
        trace {
            enabled = false // need to install procps in the containers
            fields = 'task_id,hash,native_id,name,status,exit,container,cpus,disk,memory,attempt,realtime,%cpu,%mem,rss,peak_rss,vmem,peak_vmem'
        }
    }

    test { includeConfig 'conf/test.config' }

}
